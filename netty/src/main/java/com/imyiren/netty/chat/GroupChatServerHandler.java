package com.imyiren.netty.chat;

import io.netty.channel.Channel;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import io.netty.channel.group.ChannelGroup;
import io.netty.channel.group.DefaultChannelGroup;
import io.netty.util.concurrent.GlobalEventExecutor;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


/**
 * @author feng
 */
public class GroupChatServerHandler extends SimpleChannelInboundHandler<String> {
    /**
     * ÂÆö‰πâ‰∏Ä‰∏™channelÁªÑÊù•ÁÆ°ÁêÜÊâÄÊúâÁöÑchannel
     * GlobalEventExecutor.INSTANCE ÊòØ‰∏Ä‰∏™ÂÖ®Â±ÄÁöÑ‰∫ã‰ª∂ÊâßË°åÂô®Ôºå ÊòØ‰∏Ä‰∏™Âçï‰æã
     */
    private static volatile ChannelGroup channelGroup = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);

    private DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");


    /**
     * Ë°®Á§∫ËøûÊé•Âª∫Á´ãÔºå‰∏ÄÊó¶ËøûÊé•ÔºåËøô‰∏™ÊñπÊ≥ïÁ¨¨‰∏Ä‰∏™Ë¢´ÊâßË°å ÈúÄË¶ÅÂ∞ÜÂΩìÂâçÁöÑ channelÂä†ÂÖ•Âà∞channelGroup
     *
     * @param ctx
     * @throws Exception
     */
    @Override
    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {
        Channel channel = ctx.channel();
        // Â∞ÜËØ•ËØ•ÂÆ¢Êà∑Á´Ø Âä†ÂÖ•ËÅäÂ§©ÁöÑ‰ø°ÊÅØÔºåÊé®ÈÄÅÁªôÂÖ∂‰ªñÁöÑÂú®Á∫øÂÆ¢Êà∑Á´Ø  (Ëøô‰∏™ÊñπÊ≥ï‰ºöÈÅçÂéÜÊâÄÊúâÁöÑchannelÂπ∂ÂèëÈÄÅ‰ø°ÊÅØÔºå Ëøô‰∏™ChannelGroupÂÆûÁé∞‰∫ÜSetÊé•Âè£)
        channelGroup.writeAndFlush("[Client] " + channel.remoteAddress() + " join in group chat. \n");
        channelGroup.add(channel);
    }

    /**
     * Ëß¶ÂèëËøô‰∏™ÊñπÊ≥ïË°®Á§∫channelÂ§Ñ‰∫éÊ¥ªÂä®Áä∂ÊÄÅ„ÄÇÊèêÁ§∫xx‰∏äÁ∫ø
     *
     * @param ctx ‰∏ä‰∏ãÊñá
     * @throws Exception
     */
    @Override
    public void channelActive(ChannelHandlerContext ctx) throws Exception {
        System.out.println(ctx.channel().remoteAddress() + " online. üòÅ " + LocalDateTime.now().format(formatter));
    }

    /**
     * ÂΩìchannelÂ§Ñ‰∫é‰∏çÊ¥ªÂä®Áä∂ÊÄÅÔºåÂ∞±ÊèêÁ§∫xx‰∏ãÁ∫ø„ÄÇ
     *
     * @param ctx ‰∏ä‰∏ãÊñá
     * @throws Exception
     */
    @Override
    public void channelInactive(ChannelHandlerContext ctx) throws Exception {
        System.out.println(ctx.channel().remoteAddress() + " offline. üòû");
    }


    /**
     * channelË¢´ÁßªÈô§ÔºåÊèêÈÜíÂÆ¢Êà∑Á´ØÁ¶ªÂºÄ‰∫Ü„ÄÇ
     *
     * @param ctx
     * @throws Exception
     */
    @Override
    public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {
        Channel channel = ctx.channel();
        // Ëß¶ÂèëËøô‰∏™ÊñπÊ≥ï channelGroup ‰∏≠ÁöÑchannelÔºå‰ºöË¢´ÁßªÈô§„ÄÇ ‰∏çÈúÄË¶ÅË∞ÉÁî® channelGroup.remove(channel)
        channelGroup.writeAndFlush(LocalDateTime.now().format(formatter) + " [Client] " + channel.remoteAddress() + " leave. üòû");
    }

    /**
     * ËØªÂèñÊï∞ÊçÆ Âπ∂ËΩ¨ÂèëÊ∂àÊÅØÁªôÊâÄÊúâ‰∫∫
     *
     * @param ctx
     * @param msg
     * @throws Exception
     */
    @Override
    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {
        Channel channel = ctx.channel();
        // ÈÅçÂéÜchannelGroupÊ†πÊçÆ‰∏çÂêåÊÉÖÂÜµ ÂõûÈÄÅ‰∏çÂêåÊ∂àÊÅØÔºå‰∏ªË¶ÅÊòØÂéªÈô§Ëá™Â∑±
        channelGroup.forEach(ch -> {
            // ‰∏çÊòØÂΩìÂâçÁöÑchannel„ÄÇ
            if (channel != ch) {
                ch.writeAndFlush(LocalDateTime.now().format(formatter) + " [Client] " + channel.remoteAddress() + " : " + msg);
            } else {
                ch.writeAndFlush(LocalDateTime.now().format(formatter) + " [Client] " + channel.remoteAddress() + " send msg : \"" + msg + " \" success!");
            }
        });
    }

    @Override
    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {
        ctx.close();
        System.out.println("Client " + ctx.channel().remoteAddress() + " closing... occur error : " + cause.getMessage());
    }
}
